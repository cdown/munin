#!/bin/sh

: << '=cut'

=head1 NAME

pressure_stall_information - Plugin to graph Linux pressure stall information

=head1 APPLICABLE SYSTEMS

Linux kernels since 4.20 with CONFIG_PSI=y.

=head1 INTERPRETATION

Linux's PSI feature, introduced in kernel 4.20, identifies and quantifies the
disruptions caused by resource contention as a percentage of time wasted.

=head1 AUTHOR

Copyright (C) 2022 Chris Down <chris@chrisdown.name>

=head1 LICENSE

GNU GPLv2

=head1 MAGIC MARKERS

  #%# family=auto
  #%# capabilities=autoconf

=cut

psi_dir=/proc/pressure

autoconf() {
    if [ -d "$psi_dir" ]; then
        echo yes
    else
        echo "no ($psi_dir not found)"
    fi
}

config() {
    for res in memory io cpu; do
        printf 'multigraph psi.%s\n' "$res"
        config_header "$res"
        res_config "$res"
    done
    printf 'multigraph psi\n'
    config_header
    res_config memory io cpu
}

config_header() {
    echo "graph_title PSI${1+ ("$1")}"
    echo "graph_args --upper-limit 100 -l 0"
    echo "graph_vlabel %"
    echo "graph_category system"
    echo "graph_info Resource contention as recorded from the 'avg300' counter."
}

res_config() {
    for res in "$@"; do
        while read -r psi_type _; do
            if [ "$res" = cpu ] && [ "$psi_type" = full ]; then
                # See comment in get_data
                continue
            fi
            printf '%s_%s_pressure.label %%%s %s pressure\n' \
                "$res" "$psi_type" "$psi_type" "$res"
            printf '%s_%s_pressure.info Percent %s time in "%s" contention\n' \
                "$res" "$psi_type" "$res" "$psi_type"
        done < "$psi_dir/$res"
    done
}

get_data() {
    # Example line: some avg10=0.00 avg60=0.00 avg300=0.17 total=91233216
    #
    # CPU has "full" to keep parsers the same as for cgroup-local PSI stats,
    # but it's meaningless at the system level, so it's ignored.
    for res in memory cpu io; do
        while read -r psi_type _pct_10 _pct_60 pct_300 _total; do
            if [ "$res" != cpu ] || [ "$psi_type" != full ]; then
                pct_300=${pct_300#*=}
                printf '%s_%s_pressure.value %s\n' "$res" "$psi_type" "$pct_300"
            fi
        done < "$psi_dir/$res"
    done
}

case ${1:-fetch} in
    config) config ;;
    autoconf) autoconf ;;
    fetch) get_data ;;
    *)
        printf 'Unknown option: "%s"\n' "$1"
        exit 1
    ;;
esac
